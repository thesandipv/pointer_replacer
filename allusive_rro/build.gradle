/*
 * Copyright (C) 2016-2022 Sandip Vaghela
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.application'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.afterroot.allusive_rro"
        minSdk 30
        targetSdk 31
        versionCode 1
        versionName "1.0"
    }

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    signingConfigs {
        allusive {
            keyAlias "allusive"
            keyPassword keystoreProperties['keyPassword'] ?: System.getenv("SIGN_KEY_PW")
            storeFile rootProject.file("release/keystore.jks")
            storePassword keystoreProperties['storePassword'] ?: System.getenv("SIGN_STORE_PW")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            crunchPngs false
            signingConfig signingConfigs.allusive
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.allusive
        }
    }
}
