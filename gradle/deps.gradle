/*
 * Copyright (C) 2020-2021 Sandip Vaghela
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def config = [:]
def libs = [:]

def version = [
        MAJOR: 1,
        MINOR: 9,
        PATCH: 4,
]

def versions = [
        accompanist        : "0.6.1",
        ankoCommons        : "0.10.8",
        appcompat          : "1.3.0",
        billing            : "3.0.3",
        browser            : "1.0.0",
        cardView           : "1.0.0",
        collection         : "1.1.0",
        commonsIo          : "1.3.2",
        compose            : "1.0.0-beta04",
        constraintLayout   : "2.0.4",
        coreKtx            : "1.5.0-beta02",
        core               : "0.3.1",
        crshlyticsPlugin   : "2.5.2",
        dagger             : "2.31.2",
        emoji              : "1.1.0",
        epoxy              : "4.4.1",
        firebaseBom        : "27.0.0",
        firebaseUiAuth     : "7.1.1",
        firebaseUiFirestore: "7.1.1",
        firebaseUiStorage  : "7.1.1",
        fragmentKtx        : "1.3.2",
        glide              : "4.12.0",
        googleMaterial     : "1.3.0",
        gson               : "2.8.6",
        hilt               : "2.33-beta",
        jackson            : '2.12.2',
        koin3              : "3.0.2",
        koin               : "2.2.2",
        ktlint             : "0.41.0",
        kotlin             : "1.5.0",
        kotlinxCoroutines  : "1.5.0",
        legacySupportV13   : "1.0.0",
        legacySupportV4    : "1.0.0",
        lifecycle          : "2.3.1",
        materialDialogs    : "3.3.0",
        multidex           : "2.0.1",
        navigation         : "2.3.4",
        okHttp             : '4.9.0',
        paging             : "3.0.0",
        palette            : "1.0.0",
        preference         : "1.1.1",
        recyclerview       : "1.2.0",
        retrofit           : '2.9.0',
        roomKtx            : "2.3.0-rc01",
        startUp            : "1.0.0",
        transition         : "1.3.1",
        vectorDrawable     : "1.1.0"
]

ext.Config = config
ext.Versions = versions
ext.Libs = libs

ext.SDK = [
        MIN        : 21,
        COMPILE    : 30,
        TARGET     : 30,
        BUILD_TOOLS: "30.0.3"
]

ext.VERSION_CODE = SDK.MIN * 10000000 + version.MAJOR * 10000 + version.MINOR * 100 + version.PATCH
ext.VERSION_NAME = "${version.MAJOR}.${version.MINOR}.${version.PATCH}"

config.GPH = [
        url: "https://maven.pkg.github.com"
]

libs.AGP = "com.android.tools.build:gradle:4.2.1"

libs.commonsCodec = "commons-codec:commons-codec:20041127.091804"
libs.commonsIo = "org.apache.commons:commons-io:${versions.commonsIo}"
libs.commonsLang = "org.apache.commons:commons-lang3:3.12.0"
libs.materialProgress = "me.zhanghai.android.materialprogressbar:library:1.6.1"

libs.AfterROOT = [
        coreArtifactName: "com.afterroot.core:core"
]

libs.AfterROOT.Core = [
        mavenUrl: "${config.GPH.url}/afterroot/core",
        core    : "${libs.AfterROOT.coreArtifactName}:${versions.core}"
]

libs.Kotlin = [
        stdLib      : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}",
        anko        : "org.jetbrains.anko:anko-commons:${versions.ankoCommons}",
        gradlePlugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
]

libs.Kotlin.Coroutines = [
        core        : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlinxCoroutines}",
        android     : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinxCoroutines}",
        playServices: "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:${versions.kotlinxCoroutines}"
]

libs.AndroidX = [
        appCompat       : "androidx.appcompat:appcompat:${versions.appcompat}",
        billing         : "com.android.billingclient:billing:${versions.billing}",
        browser         : "androidx.browser:browser:${versions.browser}",
        cardView        : "androidx.cardview:cardview:${versions.cardView}",
        collection      : "androidx.collection:collection-ktx:${versions.collection}",
        constraintLayout: "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}",
        core            : "androidx.core:core-ktx:${versions.coreKtx}",
        emoji           : "androidx.emoji:emoji:${versions.emoji}",
        fragment        : "androidx.fragment:fragment-ktx:${versions.fragmentKtx}",
        multiDex        : "androidx.multidex:multidex:${versions.multidex}",
        paging          : "androidx.paging:paging-runtime-ktx:${versions.paging}",
        palette         : "androidx.palette:palette:${versions.palette}",
        preference      : "androidx.preference:preference-ktx:${versions.preference}",
        recyclerView    : "androidx.recyclerview:recyclerview:${versions.recyclerview}",
        startUp         : "androidx.startup:startup-runtime:${versions.startUp}",
        supportV13      : "androidx.legacy:legacy-support-v13:${versions.legacySupportV13}",
        supportV4       : "androidx.legacy:legacy-support-v4:${versions.legacySupportV4}",
        vectorDrawable  : "androidx.vectordrawable:vectordrawable:${versions.vectorDrawable}"
]

libs.AndroidX.Lifecycle = [
        common    : "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}",
        runtime   : "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle}",
        extensions: "androidx.lifecycle:lifecycle-extensions:2.2.0",
        viewmodel : "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}",
        livedata  : "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"
]

libs.AndroidX.Navigation = [
        fragment      : "androidx.navigation:navigation-fragment-ktx:${versions.navigation}",
        ui            : "androidx.navigation:navigation-ui-ktx:${versions.navigation}",
        safeArgsPlugin: "androidx.navigation:navigation-safe-args-gradle-plugin:${versions.navigation}"
]

libs.AndroidX.Room = [
        common  : "androidx.room:room-common:${versions.roomKtx}",
        room    : "androidx.room:room-ktx:${versions.roomKtx}",
        compiler: "androidx.room:room-compiler:${versions.roomKtx}",
        runtime : "androidx.room:room-runtime:${versions.roomKtx}",
        testing : "androidx.room:room-testing:${versions.roomKtx}"
]

libs.AndroidX.Compose = [
        //Compose Libs
        ui                  : "androidx.compose.ui:ui:${versions.compose}",

        // Tooling support (Previews, etc.)
        tooling             : "androidx.compose.ui:ui-tooling:${versions.compose}",

        // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
        foundation          : "androidx.compose.foundation:foundation:${versions.compose}",

        // Material Design
        material            : "androidx.compose.material:material:${versions.compose}",
        materialThemeAdapter: "com.google.android.material:compose-theme-adapter:${versions.compose}",

        // Material design icons
        iconsCore           : "androidx.compose.material:material-icons-core:${versions.compose}",
        iconsExt            : "androidx.compose.material:material-icons-extended:${versions.compose}",

        // Integration with observables
        livedata            : "androidx.compose.runtime:runtime-livedata:${versions.compose}",

        animation           : "androidx.compose.animation:animation:${versions.compose}"
]

libs.MaterialDialogs = [
        input       : "com.afollestad.material-dialogs:input:${versions.materialDialogs}",
        core        : "com.afollestad.material-dialogs:core:${versions.materialDialogs}",
        bottomSheets: "com.afollestad.material-dialogs:bottomsheets:${versions.materialDialogs}",
        color       : "com.afollestad.material-dialogs:color:${versions.materialDialogs}"
]

libs.FirebaseUI = [
        auth     : "com.firebaseui:firebase-ui-auth:${versions.firebaseUiAuth}",
        firestore: "com.firebaseui:firebase-ui-firestore:${versions.firebaseUiFirestore}",
        storage  : "com.firebaseui:firebase-ui-storage:${versions.firebaseUiStorage}"

]

libs.Glide = [
        glide   : "com.github.bumptech.glide:glide:${versions.glide}",
        compiler: "com.github.bumptech.glide:compiler:${versions.glide}"

]


libs.Firebase = [
        bom              : "com.google.firebase:firebase-bom:$versions.firebaseBom",
        ads              : "com.google.firebase:firebase-ads",
        analytics        : "com.google.firebase:firebase-analytics-ktx",
        auth             : "com.google.firebase:firebase-auth-ktx",
        config           : "com.google.firebase:firebase-config-ktx",
        core             : "com.google.firebase:firebase-core",
        crashlytics      : "com.google.firebase:firebase-crashlytics-ktx",
        crashlyticsPlugin: "com.google.firebase:firebase-crashlytics-gradle:$versions.crshlyticsPlugin",
        database         : "com.google.firebase:firebase-database-ktx",
        firestore        : "com.google.firebase:firebase-firestore-ktx",
        messaging        : "com.google.firebase:firebase-messaging",
        storage          : "com.google.firebase:firebase-storage-ktx"
]

libs.Google = [
        ossLic        : "com.google.android.gms:play-services-oss-licenses:17.0.0",
        ossLicPlugin  : "com.google.android.gms:oss-licenses-plugin:0.10.2",
        material      : "com.google.android.material:material:${versions.googleMaterial}",
        gson          : "com.google.code.gson:gson:${versions.gson}",
        servicesPlugin: "com.google.gms:google-services:4.3.5"
]

libs.Dagger = [
        dagger  : "com.google.dagger:dagger:$versions.dagger",
        compiler: "com.google.dagger:dagger-compiler:$versions.dagger"
]

libs.Hilt = [
        hilt        : "com.google.dagger:hilt-android:$versions.hilt",
        compiler    : "com.google.dagger:hilt-android-compiler:$versions.hilt",
        testing     : "com.google.dagger:hilt-android-testing:$versions.hilt",
        gradlePlugin: "com.google.dagger:hilt-android-gradle-plugin:$versions.hilt"
]

libs.Koin = [
        // Koin for Android
        android  : "org.koin:koin-android:$versions.koin",
        // Koin AndroidX Scope features
        scope    : "org.koin:koin-androidx-scope:$versions.koin",
        // Koin AndroidX ViewModel features
        viewmodel: "org.koin:koin-androidx-viewmodel:$versions.koin",
        // Koin AndroidX Fragment features
        fragment : "org.koin:koin-androidx-fragment:$versions.koin",
        // Koin AndroidX WorkManager
        work     : "org.koin:koin-androidx-workmanager:$versions.koin",
        // Koin AndroidX Jetpack Compose
        compose  : "org.koin:koin-androidx-compose:$versions.koin",
        // Koin AndroidX Experimental features
        ext      : "org.koin:koin-androidx-ext:$versions.koin"
]

libs.Koin3 = [
        // Koin main features for Android (Scope,ViewModel ...)
        android: "io.insert-koin:koin-android:$versions.koin3",
        // Koin Android - experimental builder extensions
        ext    : "io.insert-koin:koin-android-ext:$versions.koin3",
        // Koin for Jetpack WorkManager
        work   : "io.insert-koin:koin-androidx-workmanager:$versions.koin3",
        // Koin for Jetpack Compose (unstable version)
        compose: "io.insert-koin:koin-androidx-compose:$versions.koin3",
        // Koin Test
        test   : "io.insert-koin:koin-test-junit4:$Versions.koin3"
]

libs.OkHttp = [
        logging: "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
        okHttp : "com.squareup.okhttp3:okhttp:$versions.okHttp"
]

libs.Retrofit = [
        jackson : "com.squareup.retrofit2:converter-jackson:$versions.retrofit",
        retrofit: "com.squareup.retrofit2:retrofit:$versions.retrofit"
]

libs.Epoxy = [
        epoxy    : "com.airbnb.android:epoxy:$versions.epoxy",
        processor: "com.airbnb.android:epoxy-processor:$versions.epoxy"
]

libs.Accompanist = [
        glide : "dev.chrisbanes.accompanist:accompanist-glide:$versions.accompanist",
        insets: "dev.chrisbanes.accompanist:accompanist-insets:$versions.accompanist"
]

libs.Test = [
        junit   : "junit:junit:4.13.2",
        junitExt: "androidx.test.ext:junit:1.1.2",
        espresso: "androidx.test.espresso:espresso-core:3.3.0"
]