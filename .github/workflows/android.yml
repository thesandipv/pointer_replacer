name: Android CI

on:
  push:
    branches: [ main, dev ]
    tags:
      - allusive_v*
  pull_request:
    branches: [ main, dev ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permissions
        run: chmod +x release/decrypt.sh release/clean.sh

      - name: Decrypt Task
        run: ./release/decrypt.sh
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew checksum.sh

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - name: Copy CI gradle.properties
        run: cp .github/ci-gradle.properties gradle.properties

      - name: Create empty-module.zip
        run: mkdir ../../src/main/assets && zip -r ../../src/main/assets/empty-module.zip ./
        working-directory: ui/magisk/module/empty-module

      - uses: actions/cache@v2
        continue-on-error: true # continue if the cache restore/upload fails
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}

      - name: Build with Gradle
        run: ./gradlew assemble bundle lintDebug testDebug --stacktrace
        env:
          GHUSERNAME: ${{ secrets.GHUSERNAME }}
          GHTOKEN: ${{ secrets.GITHUB_TOKEN }}
          SIGN_KEY_PW: ${{ secrets.SIGN_KEY_PW }}
          SIGN_STORE_PW: ${{ secrets.SIGN_STORE_PW }}

      - name: Publish to Play Store
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/allusive_v')
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: release/serviceAccount.json
          packageName: com.afterroot.allusive2
          track: internal
          releaseFiles: allusive/build/outputs/bundle/release/allusive-release.aab
          mappingFile: allusive/build/outputs/mapping/release/mapping.txt

      - name: Create release for tags
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/allusive_v') || github.ref == 'refs/heads/main'
        with:
          draft: true
          files: |
            allusive/build/outputs/apk/release/allusive-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean Task
        if: always()
        run: ./release/clean.sh

      - name: Upload build outputs
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: allusive/build/outputs/apk/release/allusive-release.apk

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: build-reports
          path: allusive/build/reports
