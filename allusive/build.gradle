/*
 * Copyright (C) 2016-2019 Sandip Vaghela
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

static def buildTime() {
    def df = new SimpleDateFormat("yyMMdd")
    return df.format(new Date())
}

ext.major = 1
ext.minor = 7
ext.patch = 2

private String genVersionName() {
    return "${ext.major}.${ext.minor}.${ext.patch}.${buildTime()}"
}

private Integer genVersionCode() {
    return ext.major * 10000 + ext.minor * 1000 + ext.patch * 100
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.afterroot.allusive"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode genVersionCode()
        versionName genVersionName()
        resConfigs "en"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            multiDexKeepProguard file('proguard-rules.pro')
            multiDexKeepFile file('main_dex.txt')
        }
        debug {
            ext.alwaysUpdateBuildId = false
            splits.abi.enable = false
            splits.density.enable = false
            aaptOptions.cruncherEnabled = false

            multiDexKeepProguard file('proguard-rules.pro')
            multiDexKeepFile file('main_dex.txt')
        }
    }
    afterEvaluate {
        tasks.matching {
            it.name.startsWith('dex')
        }.each { dx ->
            if (dx.additionalParameters == null) {
                dx.additionalParameters = []
            }
            dx.additionalParameters += '--multi-dex'
            dx.additionalParameters += "--main-dex-list=main_dex.txt"
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }
    flavorDimensions 'ar'
    productFlavors {
        dev {
            dimension = 'ar'
            minSdkVersion 22
            targetSdkVersion 28
            resConfigs('en', 'xhdpi')
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.anko:anko-commons:0.10.8'

    implementation 'android.arch.navigation:navigation-fragment:1.0.0'
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0'

    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'androidx.core:core:1.2.0-alpha02'
    implementation 'androidx.core:core-ktx:1.2.0-alpha02'
    implementation 'androidx.fragment:fragment:1.2.0-alpha01'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0-alpha02'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha02'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-alpha02'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.preference:preference:1.1.0-rc01'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta01'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0-rc01'

    implementation 'com.afollestad.material-dialogs:input:2.6.0'
    implementation 'com.afollestad.material-dialogs:core:2.6.0'

    implementation 'com.andkulikov:transitionseverywhere:1.8.1'

    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    implementation 'com.firebaseui:firebase-ui-auth:4.3.2'

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.github.yukuku:ambilwarna:2.0.1'

    implementation 'com.google.android.material:material:1.1.0-alpha08'
    implementation 'com.google.firebase:firebase-ads:18.1.0'
    implementation 'com.google.firebase:firebase-auth:18.1.0'
    implementation 'com.google.firebase:firebase-config:18.0.0'
    implementation 'com.google.firebase:firebase-core:17.0.1'
    implementation 'com.google.firebase:firebase-firestore:20.1.0'
    implementation 'com.google.firebase:firebase-messaging:19.0.1'
    implementation 'com.google.firebase:firebase-storage:18.1.0'

    implementation 'de.psdev.licensesdialog:licensesdialog:2.1.0'
    implementation 'org.apache.commons:commons-io:1.3.2'
    compileOnly 'de.robv.android.xposed:api:82'
}
apply plugin: 'com.google.gms.google-services'
