/*
 * Copyright (C) 2016-2020 Sandip Vaghela
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.gms.oss-licenses-plugin'
}

ext {
    major = 1
    minor = 9
    patch = 3
    minimumSdkVersion = 16
    ci = System.getenv("CI") == "true"
}
android {
    compileSdkVersion 30

    buildFeatures {
        dataBinding true
    }

    defaultConfig {
        applicationId "com.afterroot.allusive2"
        minSdkVersion project.ext.minimumSdkVersion
        targetSdkVersion 30
        versionCode project.ext.minimumSdkVersion * 10000000 + project.ext.major * 10000 + project.ext.minor * 100 + project.ext.patch
        versionName "${project.ext.major}.${project.ext.minor}.${project.ext.patch}"
        vectorDrawables {
            useSupportLibrary = true
        }
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"
                ]
            }
        }

        def commit = "git rev-list --max-count=1 HEAD".execute([], project.rootDir).text.substring(0, 7)
        buildConfigField "String", "COMMIT_ID", "\"$commit\""
    }

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    signingConfigs {
        allusive {
            keyAlias "allusive"
            keyPassword keystoreProperties['keyPassword'] ?: System.getenv("SIGN_KEY_PW")
            storeFile rootProject.file("release/keystore.jks")
            storePassword keystoreProperties['storePassword'] ?: System.getenv("SIGN_STORE_PW")
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            multiDexKeepProguard file('proguard-rules.pro')
            multiDexKeepFile file('main_dex.txt')
            signingConfig signingConfigs.allusive
        }
        debug {
            ext.alwaysUpdateBuildId = false
            splits.abi.enable = false
            splits.density.enable = false
            crunchPngs false

            signingConfig signingConfigs.allusive

            versionNameSuffix = '-beta'
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = 1.8
    }
    lintOptions {
        abortOnError false
    }

    packagingOptions {
        // Exclude AndroidX version files
        exclude 'META-INF/*.version'
        // Exclude consumer proguard files
        exclude 'META-INF/proguard/*'
        // Exclude the Firebase/Fabric/other random properties files
        exclude '/*.properties'
        exclude 'fabric/*.properties'
        exclude 'META-INF/*.properties'
    }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$ankoCommonsVersion"

    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.cardview:cardview:$cardviewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
    implementation "androidx.legacy:legacy-support-v13:$legacySupportV13Version"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportV4Version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.multidex:multidex:$multidexVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"
    implementation "androidx.preference:preference-ktx:$preferenceVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.room:room-ktx:$roomKtxVersion"
    implementation "androidx.room:room-runtime:$roomKtxVersion"
    implementation "androidx.startup:startup-runtime:$startUpVersion"
    implementation "androidx.vectordrawable:vectordrawable:$vectordrawableVersion"
    implementation "com.android.billingclient:billing:$billingVersion"
    kapt "androidx.room:room-compiler:$roomKtxVersion"
    androidTestImplementation "androidx.room:room-testing:$roomKtxVersion"

    implementation "com.afollestad.material-dialogs:input:$materialDialogsVersion"
    implementation "com.afollestad.material-dialogs:core:$materialDialogsVersion"
    implementation "com.afollestad.material-dialogs:bottomsheets:$materialDialogsVersion"
    implementation "com.afollestad.material-dialogs:color:$materialDialogsVersion"

    implementation "com.firebaseui:firebase-ui-auth:$firebaseUiAuthVersion"
    implementation "com.firebaseui:firebase-ui-firestore:$firebaseUiFirestoreVersion"
    implementation "com.firebaseui:firebase-ui-storage:$firebaseUiStorageVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    implementation platform('com.google.firebase:firebase-bom:26.1.0')

    implementation "com.google.android.gms:play-services-oss-licenses:17.0.0"
    implementation "com.google.android.material:material:$googleMaterialVersion"
    implementation 'com.google.android.gms:play-services-ads:19.7.0'
    implementation 'com.google.android.play:core:1.9.1'
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "com.google.firebase:firebase-config-ktx"
    implementation "com.google.firebase:firebase-core"
    implementation "com.google.firebase:firebase-crashlytics-ktx"
    implementation "com.google.firebase:firebase-firestore-ktx"
    implementation "com.google.firebase:firebase-messaging"
    implementation "com.google.firebase:firebase-storage-ktx"

    implementation "org.apache.commons:commons-io:$commonsIoVersion"
    compileOnly "de.robv.android.xposed:api:$xposedAPIVersion"

    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-androidx-scope:$koinVersion"
    implementation "org.koin:koin-androidx-viewmodel:$koinVersion"

    implementation 'com.airbnb.android:epoxy:4.3.1'
    kapt 'com.airbnb.android:epoxy-processor:4.3.1'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxCoroutinesVersion"
    testImplementation 'junit:junit:4.13.2'
    implementation "com.afterroot.core:core:$coreVersion"

    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    implementation 'me.zhanghai.android.fastscroll:library:1.1.5'

    implementation 'androidx.test.ext:junit-ktx:1.1.2'
    implementation 'androidx.test:core-ktx:1.3.0'
}